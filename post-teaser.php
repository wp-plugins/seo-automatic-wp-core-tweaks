<?php
/*
Post Teaser
http://wordpress.org/extend/plugins/post-teaser/
Post Teaser generates a preview or "teaser" of a post for the main, archive and category pages, with a link underneath to go to the full post page. It includes features to generate a word count, image count, and an estimated reading time.
ver: 4.1.1
Author: WeyHan Ng
Author URI: http://sandboxblogger.com/
Text Domain: post-teaser

**** WARNING: DO NOT EDIT THIS FILE! YOU CAN CONFIGURE THE PLUGIN FROM THE "OPTIONS > POST TEASER" MENU ****

**** NOTE: PLEASE DO NOT EMAIL JONATHAN LEIGHTON FOR SUPPORT. Instead email <han at sandboxblogger dot com> for support. ****

Post Teaser -- A teaser plugin for WordPress
Copyright (C) Jonathan Leighton (j@jonathanleighton.com)
Copyright (C) WeyHan Ng (han@sandboxblogger.com)

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with WordPress; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
*/
class post_teaser {
	var $version = "4.1.1";
	var $debug = false;

	var $meta = "";

	/*** Default option values ***/
	var $default_options = array();

	/*** Anything that doesn't really need to be configurable ***/
	var $static_options = array
		(
			'blocks' => 'p|li|dt|dd|address|form|pre|tr'
		);

	/*** Called once before any teasering. Puts the options into properties. ***/
	function post_teaser() {
		load_plugin_textdomain('post-teaser');
		$this->default_options['full_template'] = __('<a href="%permalink%" title="Permanent Link: %plain_title%" rel="bookmark">Permanent link to this post</a> (%word_image_count%, estimated %reading_time% reading time)', 'post-teaser');
		$this->default_options['more_template'] = __('&nbsp;<a href="%permalink%" title="Permanent Link: %plain_title%" rel="bookmark">Read more...</a> <i>(%word_image_count%, estimated %reading_time% reading time)</i>', 'post-teaser');
		$this->default_options['teaser_template'] = __('This is a preview of <q>%title%</q>. <a href="%permalink%" title="Permanent Link: %plain_title%" rel="bookmark">Read the full post (%word_image_count%, estimated %reading_time% reading time)</a>', 'post-teaser');
		$this->default_options['target'] = '100';
		$this->default_options['word_mins'] = __(' mins', 'post-teaser');
		$this->default_options['word_secs'] = __(' secs', 'post-teaser');
		$this->default_options['time_separator'] = ':';
		$this->default_options['zero_counts'] = '0';
		$this->default_options['count_separator'] = ', ';
		$this->default_options['more_link'] = '0';
		$this->default_options['block_stats'] = '1';
		$this->default_options['block_stats_before'] = '0';
		$this->default_options['omit_fullpost'] = '0';
		$this->default_options['use_disable_filter'] = '0';
		$this->default_options['home_control'] = '0';
		$this->default_options['home_disable'] = '0';
		$this->default_options['home_showall'] = '0';
		$this->default_options['disable_cat'] = '';
		$this->default_options['disable_cat_always'] = '0';
		$this->default_options['disable_inverse'] = '0';
		$this->default_options['disable_tag'] = '';
		$this->default_options['disable_tag_always'] = '0';
		$this->default_options['use_showall_filter'] = '0';
		$this->default_options['showall_cat'] = '';
		$this->default_options['showall_cat_always'] = '0';
		$this->default_options['showall_inverse'] = '0';
		$this->default_options['showall_tag'] = '';
		$this->default_options['showall_tag_always'] = '0';

		$options = get_option('post_teaser');
		if (!$options) {
			add_option('post_teaser', $this->default_options);
			$options = $this->default_options;
		}
		foreach ($options as $option_name => $option_value)
			$this->{$option_name} = $option_value;
		foreach ($this->static_options as $option_name => $option_value)
			$this->{$option_name} = $option_value;

		if (!$this->full_template) {
			$this->full_template = $this->default_options['full_template'];
		}
		if (!$this->more_template) {
			$this->more_template = $this->default_options['more_template'];
		}
		if (!$this->teaser_template) {
			$this->teaser_template = $this->default_options['teaser_template'];
		}

		if (strstr($this->full_template, '%reading_time%') || strstr($this->more_template, '%reading_time%') || strstr($this->teaser_template, '%reading_time%'))
			$this->doing_reading_time = true;
		else
			$this->doing_reading_time = false;

		if (strstr($this->full_template, '%word_image_count%') || strstr($this->more_template, '%word_image_count%') || strstr($this->teaser_template, '%word_image_count%'))
			$this->doing_counts = true;
		else
			$this->doing_counts = false;
	}

	/*** For editing the plugin's configuration in the admin menu ***/
	function init_option_page() {
		if (isset($_POST['post_teaser_submit']) && $_POST['post_teaser_submit']) {
			$uri_arg_pos = strpos($_SERVER["REQUEST_URI"], "&");
			if ($uri_arg_pos !== false)
				$request_uri = substr($_SERVER["REQUEST_URI"], 0, $uri_arg_pos);
			else
				$request_uri = $_SERVER["REQUEST_URI"];

			if (isset($_POST['submit_update'])) {
				$new_options = array
					(
						'full_template' => trim(stripslashes($_POST['full_template'])),
						'more_template' => trim(stripslashes($_POST['more_template'])),
						'teaser_template' => trim(stripslashes($_POST['teaser_template'])),
						'target' => (int) $_POST['target'],
						'word_mins' => $_POST['word_mins'],
						'word_secs' => $_POST['word_secs'],
						'time_separator' => $_POST['time_separator'],
						'zero_counts' => $_POST['zero_counts'],
						'count_separator' => $_POST['count_separator'],
						'more_link' => $_POST['more_link'],
						'block_stats' => $_POST['block_stats'],
						'block_stats_before' => $_POST['block_stats_before'],
						'omit_fullpost' => $_POST['omit_fullpost'],
						'use_disable_filter' => $_POST['use_disable_filter'],
						'home_control' => $_POST['home_control'],
						'home_control_opt' => $_POST['home_control_opt'],
						'disable_cat' => $_POST['disable_cat'],
						'disable_cat_always' => $_POST['disable_cat_always'],
						'disable_inverse' => $_POST['disable_inverse'],
						'disable_tag' => $_POST['disable_tag'],
						'disable_tag_always' => $_POST['disable_tag_always'],
						'use_showall_filter' => $_POST['use_showall_filter'],
						'showall_cat' => $_POST['showall_cat'],
						'showall_cat_always' => $_POST['showall_cat_always'],
						'showall_inverse' => $_POST['showall_inverse'],
						'showall_tag' => $_POST['showall_tag'],
						'showall_tag_always' => $_POST['showall_tag_always']
					);

				$new_options['count_separator'] = str_replace('&', '&amp;', $new_options['count_separator']);

				/** Store all checked box as '1' or' 0' for checked or unchecked **/
				$new_options['zero_counts'] = $new_options['zero_counts'] ? '1' : '0';
				$new_options['more_link'] = $new_options['more_link'] ? '1' : '0';
				$new_options['block_stats'] = $new_options['block_stats'] ? '1' : '0';
				$new_options['block_stats_before'] = $new_options['block_stats_before'] ? '1' : '0';
				$new_options['omit_fullpost'] = $new_options['omit_fullpost'] ? '1' : '0';
				$new_options['home_control'] = $new_options['home_control'] ? '1' : '0';
				$new_options['use_disable_filter'] = $new_options['use_disable_filter'] ? '1' : '0';
				$new_options['disable_cat_always'] = $new_options['disable_cat_always'] ? '1' : '0';
				$new_options['disable_inverse'] = $new_options['disable_inverse'] ? '1' : '0';
				$new_options['disable_tag_always'] = $new_options['disable_tag_always'] ? '1' : '0';
				$new_options['use_showall_filter'] = $new_options['use_showall_filter'] ? '1' : '0';
				$new_options['showall_cat_always'] = $new_options['showall_cat_always'] ? '1' : '0';
				$new_options['showall_inverse'] = $new_options['showall_inverse'] ? '1' : '0';
				$new_options['showall_tag_always'] = $new_options['showall_tag_always'] ? '1' : '0';

				/** normalized space for all free text list field before saving options**/
				$cat_str = $new_options['disable_cat'];
				if ($cat_str) {
					$new_cat_str = '';
					foreach(explode(",", $cat_str) as $cat) {
						$new_cat_str = $new_cat_str . "," . trim($cat);
					}
					$new_options['disable_cat'] = trim($new_cat_str, ",");
				}

				switch ($new_options['home_control_opt']) {
				case "home_disable":
					$new_options['home_disable'] = '1';
					break;
				case "home_showall":
					$new_options['home_showall'] = '1';
					break;
				default:
					$new_options['home_disable'] = '0';
					$new_options['home_showall'] = '0';
				}

				$tag_str = $new_options['disable_tag'];
				if ($tag_str) {
					$new_tag_str = '';
					foreach(explode(",", $tag_str) as $tag) {
						$new_tag_str = $new_tag_str . "," . trim($tag);
					}
					$new_options['disable_tag'] = trim($new_tag_str, ",");
				}

				$cat_str = $new_options['showall_cat'];
				if ($cat_str) {
					$new_cat_str = '';
					foreach(explode(",", $cat_str) as $cat) {
						$new_cat_str = $new_cat_str . "," . trim($cat);
					}
					$new_options['showall_cat'] = trim($new_cat_str, ",");
				}

				$tag_str = $new_options['showall_tag'];
				if ($tag_str) {
					$new_tag_str = '';
					foreach(explode(",", $tag_str) as $tag) {
						$new_tag_str = $new_tag_str . "," . trim($tag);
					}
					$new_options['showall_tag'] = trim($new_tag_str, ",");
				}

				update_option('post_teaser', $new_options);
				header('Location: ' . $request_uri . '&saved=true');
			} elseif (isset($_POST['submit_reset'])) {
				update_option('post_teaser', $this->default_options);
				header('Location: ' . $request_uri . '&saved=true');
			}
			die;
		}

		$post_teaser_page = add_options_page(__('Post Teaser', 'post-teaser'), __('Post Teaser', 'post-teaser'), 6, __FILE__, array(&$this, 'option_page'));
		add_action("admin_print_scripts-$post_teaser_page", array(&$this, 'option_page_head'));
	}
	function option_page_head() {
		$plugindir = get_option('siteurl').'/wp-content/plugins/'.dirname(plugin_basename(__FILE__));
		echo "<link rel='stylesheet' href='$plugindir/post-teaser.css' type='text/css' />\n";
		?>
<script type="text/javascript">
//<![CDATA[
var count_separator = '<?php echo $this->count_separator; ?>';
var time_separator = '<?php echo $this->time_separator; ?>';
var word_mins = '<?php echo $this->word_mins; ?>';
function update_preview(textareaId, previewId) {
	template = document.getElementById(textareaId).value;
	if (textareaId == "more_template") {
		template = '<span class="grayout">' + '<?php _e('...post text before cut-off', 'post-teaser') ?>' + '</span>' + template;
	}
	template = template.replace('%title%', '<?php _e('An <em>example<\/em> post', 'post-teaser') ?>');
	template = template.replace('%plain_title%', '<?php _e('An example post', 'post-teaser') ?>');
	template = template.replace('%permalink%', 'http://example.com');
	template = template.replace('%word_image_count%', '462 <?php _e('words', 'post-teaser') ?>' + count_separator + '3 <?php _e('images', 'post-teaser') ?>');
	template = template.replace('%reading_time%', '3' + time_separator + '34 ' + word_mins);
	document.getElementById(previewId).innerHTML = template;
	template = null;
}
window.onload = function() {
	if (!document.getElementById('block_stats').checked) {
		document.getElementById('omit_fullpost').disabled = true;
		document.getElementById('omit_fullpost_label').className = "grayout";
		document.getElementById('omit_fullpost_info').className = "info grayout";
		document.getElementById('block_stats_before').disabled = true;
		document.getElementById('block_stats_before_label').className = "grayout";
		document.getElementById('block_stats_before_info').className = "info grayout";
		document.getElementById('teaser_template').disabled = true;
		document.getElementById('teaser_template').className = "template grayout";
		document.getElementById('full_template').disabled = true;
		document.getElementById('full_template').className = "template grayout";
	} else {
		if (document.getElementById('omit_fullpost').checked) {
			document.getElementById('full_template').disabled = true;
			document.getElementById('full_template').className = "template grayout";
		}
	}
	if (!document.getElementById('more_link').checked) {
		document.getElementById('more_template').disabled = true;
		document.getElementById('more_template').className = "template grayout";
	}
	if (!document.getElementById('home_control').checked) {
		document.getElementById('home_disable').disabled = true;
		document.getElementById('home_showall').disabled = true;
		document.getElementById('home_disable_label').className = "grayout";
		document.getElementById('home_showall_label').className = "grayout";
	}
	if (!document.getElementById('use_disable_filter').checked) {
		document.getElementById('disable_cat').disabled = true;
		document.getElementById('disable_cat_always').disabled = true;
		document.getElementById('disable_inverse').disabled = true;
		document.getElementById('disable_tag').disabled = true;
		document.getElementById('disable_tag_always').disabled = true;
		document.getElementById('disable_cat_label').className = "grayout indent";
		document.getElementById('disable_cat_info').className = "grayout info";
		document.getElementById('disable_cat_always_label').className = "grayout";
		document.getElementById('disable_cat_always_info').className = "grayout info";
		document.getElementById('disable_inverse_label').className = "grayout";
		document.getElementById('disable_inverse_info').className = "grayout info";
		document.getElementById('disable_tag_label').className = "grayout indent";
		document.getElementById('disable_tag_info').className = "grayout info";
		document.getElementById('disable_tag_always_label').className = "grayout";
		document.getElementById('disable_tag_always_info').className = "grayout info";
	}
	if (!document.getElementById('use_showall_filter').checked) {
		document.getElementById('showall_cat').disabled = true;
		document.getElementById('showall_cat_always').disabled = true;
		document.getElementById('showall_inverse').disabled = true;
		document.getElementById('showall_tag').disabled = true;
		document.getElementById('showall_tag_always').disabled = true;
		document.getElementById('showall_cat_label').className = "grayout indent";
		document.getElementById('showall_cat_info').className = "grayout info";
		document.getElementById('showall_cat_always_label').className = "grayout";
		document.getElementById('showall_cat_always_info').className = "grayout info";
		document.getElementById('showall_inverse_label').className = "grayout";
		document.getElementById('showall_inverse_info').className = "grayout info";
		document.getElementById('showall_tag_label').className = "grayout indent";
		document.getElementById('showall_tag_info').className = "grayout info";
		document.getElementById('showall_tag_always_label').className = "grayout";
		document.getElementById('showall_tag_always_info').className = "grayout info";
	}
	var container = document.getElementById('teaser_template_container');
	var insert = document.createElement('h4');
	insert.innerHTML = '<?php _e('Preview', 'post-teaser') ?>';
	container.appendChild(insert);

	insert = document.createElement('div');
	insert.id = 'teaser_template_preview';
	insert.className = 'preview left';
	container.appendChild(insert);

	document.getElementById('teaser_template').onkeyup = function() { update_preview('teaser_template', 'teaser_template_preview'); };
	update_preview('teaser_template', 'teaser_template_preview');

	container = document.getElementById('more_template_container');
	insert = document.createElement('h4');
	insert.innerHTML = '<?php _e('Preview', 'post-teaser') ?>';
	container.appendChild(insert);

	insert = document.createElement('div');
	insert.id = 'more_template_preview';
	insert.className = 'preview left';
	container.appendChild(insert);

	document.getElementById('more_template').onkeyup = function() { update_preview('more_template', 'more_template_preview'); };
	update_preview('more_template', 'more_template_preview');

	container = document.getElementById('full_template_container');
	insert = document.createElement('h4');
	insert.innerHTML = '<?php _e('Preview', 'post-teaser') ?>';
	container.appendChild(insert);

	insert = document.createElement('div');
	insert.id = 'full_template_preview';
	insert.className = 'preview left';
	container.appendChild(insert);

	document.getElementById('full_template').onkeyup = function() { update_preview('full_template', 'full_template_preview'); };
	update_preview('full_template', 'full_template_preview');

	document.getElementById('count_separator').onchange = function() {
		count_separator = this.value;
		update_preview('full_template', 'full_template_preview');
		update_preview('more_template', 'more_template_preview');
		update_preview('teaser_template', 'teaser_template_preview');
	};
	document.getElementById('time_separator').onchange = function() {
		time_separator = this.value;
		update_preview('full_template', 'full_template_preview');
		update_preview('more_template', 'more_template_preview');
		update_preview('teaser_template', 'teaser_template_preview');
	};
	document.getElementById('word_mins').onkeyup = function() {
		word_mins = this.value;
		update_preview('full_template', 'full_template_preview');
		update_preview('more_template', 'more_template_preview');
		update_preview('teaser_template', 'teaser_template_preview');
	};
	document.getElementById('more_link').onclick = function() {
		if(document.getElementById('more_link').checked) {
			document.getElementById('more_template').disabled=false;
			document.getElementById('more_template').className = "template";
		} else {
			document.getElementById('more_template').disabled=true;
			document.getElementById('more_template').className = "template grayout";
		}
		if (document.getElementById('block_stats').checked) {
			document.getElementById('teaser_template').disabled=false;
			document.getElementById('teaser_template').className = "template";
		} else {
			document.getElementById('teaser_template').disabled=true;
			document.getElementById('teaser_template').className = "template grayout";
		}
	};
	document.getElementById('block_stats').onclick = function() {
		if(document.getElementById('block_stats').checked) {
			document.getElementById('teaser_template').disabled=false;
			document.getElementById('teaser_template').className = "template";
			document.getElementById('omit_fullpost').disabled=false;
			document.getElementById('omit_fullpost_label').className = "";
			document.getElementById('omit_fullpost_info').className = "info";
			document.getElementById('block_stats_before').disabled=false;
			document.getElementById('block_stats_before_label').className = "";
			document.getElementById('block_stats_before_info').className = "info";
			if (!document.getElementById('omit_fullpost').checked) {
				document.getElementById('full_template').disabled=false;
				document.getElementById('full_template').className = "template";
			}
		} else {
			document.getElementById('teaser_template').disabled=true;
			document.getElementById('teaser_template').className = "template grayout";
			document.getElementById('full_template').disabled=true;
			document.getElementById('full_template').className = "template grayout";
			document.getElementById('omit_fullpost').disabled=true;
			document.getElementById('omit_fullpost_label').className = "grayout";
			document.getElementById('omit_fullpost_info').className = "info grayout";
			document.getElementById('block_stats_before').disabled=true;
			document.getElementById('block_stats_before_label').className = "grayout";
			document.getElementById('block_stats_before_info').className = "info grayout";
		}
	};
	document.getElementById('omit_fullpost').onclick = function() {
		if (document.getElementById('omit_fullpost').checked) {
			document.getElementById('full_template').disabled=true;
			document.getElementById('full_template').className = "template grayout";
		} else {
			document.getElementById('full_template').disabled=false;
			document.getElementById('full_template').className = "template";
		}
	};
	document.getElementById('home_control').onclick = function() {
		if (document.getElementById('home_control').checked) {
			document.getElementById('home_disable').disabled=false;
			document.getElementById('home_showall').disabled=false;
			document.getElementById('home_disable_label').className = "";
			document.getElementById('home_showall_label').className = "";
		} else {
			document.getElementById('home_disable').disabled=true;
			document.getElementById('home_showall').disabled=true;
			document.getElementById('home_disable_label').className = "grayout";
			document.getElementById('home_showall_label').className = "grayout";
		}
	};
	document.getElementById('use_disable_filter').onclick = function() {
		if (document.getElementById('use_disable_filter').checked) {
			document.getElementById('disable_cat').disabled=false;
			document.getElementById('disable_cat_always').disabled=false;
			document.getElementById('disable_inverse').disabled=false;
			document.getElementById('disable_tag').disabled=false;
			document.getElementById('disable_tag_always').disabled=false;
			document.getElementById('disable_cat_label').className = "indent";
			document.getElementById('disable_cat_info').className = "info";
			document.getElementById('disable_cat_always_label').className = "";
			document.getElementById('disable_cat_always_info').className = "info";
			document.getElementById('disable_inverse_label').className = "";
			document.getElementById('disable_inverse_info').className = "info";
			document.getElementById('disable_tag_label').className = "indent";
			document.getElementById('disable_tag_info').className = "info";
			document.getElementById('disable_tag_always_label').className = "";
			document.getElementById('disable_tag_always_info').className = "info";
		} else {
			document.getElementById('disable_cat').disabled=true;
			document.getElementById('disable_cat_always').disabled=true;
			document.getElementById('disable_inverse').disabled=true;
			document.getElementById('disable_tag').disabled=true;
			document.getElementById('disable_tag_always').disabled=true;
			document.getElementById('disable_cat_label').className = "grayout indent";
			document.getElementById('disable_cat_info').className = "grayout info";
			document.getElementById('disable_cat_always_label').className = "grayout";
			document.getElementById('disable_cat_always_info').className = "grayout info";
			document.getElementById('disable_inverse_label').className = "grayout";
			document.getElementById('disable_inverse_info').className = "grayout info";
			document.getElementById('disable_tag_label').className = "grayout indent";
			document.getElementById('disable_tag_info').className = "grayout info";
			document.getElementById('disable_tag_always_label').className = "grayout";
			document.getElementById('disable_tag_always_info').className = "grayout info";
		}
	};
	document.getElementById('use_showall_filter').onclick = function() {
		if (document.getElementById('use_showall_filter').checked) {
			document.getElementById('showall_cat').disabled=false;
			document.getElementById('showall_cat_always').disabled=false;
			document.getElementById('showall_inverse').disabled=false;
			document.getElementById('showall_tag').disabled=false;
			document.getElementById('showall_tag_always').disabled=false;
			document.getElementById('showall_cat_label').className = "indent";
			document.getElementById('showall_cat_info').className = "info";
			document.getElementById('showall_cat_always_label').className = "";
			document.getElementById('showall_cat_always_info').className = "info";
			document.getElementById('showall_inverse_label').className = "";
			document.getElementById('showall_inverse_info').className = "info";
			document.getElementById('showall_tag_label').className = "indent";
			document.getElementById('showall_tag_info').className = "info";
			document.getElementById('showall_tag_always_label').className = "";
			document.getElementById('showall_tag_always_info').className = "info";
		} else {
			document.getElementById('showall_cat').disabled=true;
			document.getElementById('showall_cat_always').disabled=true;
			document.getElementById('showall_inverse').disabled=true;
			document.getElementById('showall_tag').disabled=true;
			document.getElementById('showall_tag_always').disabled=true;
			document.getElementById('showall_cat_label').className = "grayout indent";
			document.getElementById('showall_cat_info').className = "grayout info";
			document.getElementById('showall_cat_always_label').className = "grayout";
			document.getElementById('showall_cat_always_info').className = "grayout info";
			document.getElementById('showall_inverse_label').className = "grayout";
			document.getElementById('showall_inverse_info').className = "grayout info";
			document.getElementById('showall_tag_label').className = "grayout indent";
			document.getElementById('showall_tag_info').className = "grayout info";
			document.getElementById('showall_tag_always_label').className = "grayout";
			document.getElementById('showall_tag_always_info').className = "grayout info";
		}
	};
	document.getElementById('post_teaser_form').onsubmit = function() {
		document.getElementById('teaser_template').disabled=false;
		document.getElementById('more_template').disabled=false;
		document.getElementById('full_template').disabled=false;
		document.getElementById('home_control').disabled=false;
		document.getElementById('home_disable').disabled=false;
		document.getElementById('home_showall').disabled=false;
		document.getElementById('disable_cat').disabled=false;
		document.getElementById('disable_cat_always').disabled=false;
		document.getElementById('disable_inverse').disabled=false;
		document.getElementById('disable_tag').disabled=false;
		document.getElementById('disable_tag_always').disabled=false;
		document.getElementById('showall_cat').disabled=false;
		document.getElementById('showall_cat_always').disabled=false;
		document.getElementById('showall_inverse').disabled=false;
		document.getElementById('showall_tag').disabled=false;
		document.getElementById('showall_tag_always').disabled=false;
	};
	document.getElementById('default-reset').onclick = function() {
		if (confirm('<?php _e('Do you really want to reset all your configuration to the default values?', 'post-teaser') ?>'))
			return true;
		else
			return false;
	};

	container, insert = null;
};
//]]>
</script>
		<?php
	}
	function option_page() {
			?>
			<?php if ($_GET['saved'] == 'true'): ?>
			<div style="background-color: rgb(207, 235, 247);" id="message" class="updated fade"><p><?php _e('Settings saved.', 'post-teaser') ?> <a href="<?php echo get_settings('siteurl'); ?>"><?php _e('View site &#187;', 'post-teaser') ?></a></p></div>
			<?php endif; ?>

			<div class="wrap">
			<div id="icon-options-general" class="icon32"><br /></div>
			<h2><?php _e('Post Teaser Settings', 'post-teaser') ?></h2>

			<p><?php _e('You can configure Post Teaser here. You might also be interested in <a href="http://wordpress.org/extend/plugins/post-teaser/" title="The Documentation page for Post Teaser">viewing the latest documentation</a> or the <a href="http://wordpress.org/extend/plugins/post-teaser/faq/" title="The frequently asked question for Post Teaser">FAQ</a>.', 'post-teaser') ?></p>

			<form action="<?php echo htmlspecialchars($_SERVER["REQUEST_URI"]); ?>" method="post" name="post_teaser_form" id="post_teaser_form">
				<fieldset class="options clearfix">
				<h3><?php _e('Basic settings', 'post-teaser') ?></h3>

				<p><?php printf(__('I would like the teaser to be as close to %s words as possible.', 'post-teaser'), '<input type="text" id="target" name="target" value="' . $this->target . '" />'); ?></p>

				<div class="right" id="key">
				<h3><?php _e('Placeholders', 'post-teaser') ?></h3>

				<p><?php _e('These will be replaced with the appropriate values when the plugin runs.', 'post-teaser') ?></p>

				<dl>
					<dt>%title%</dt>
					<dd><?php _e('The title of the post', 'post-teaser') ?></dd>

					<dt>%plain_title%</dt>
					<dd><?php _e('The title in plain text with no <abbr title="Hypertext Markup Language">HTML</abbr> (to go in the <code>title</code> attribute of a link, for instance)', 'post-teaser') ?></dd>

					<dt>%permalink%</dt>
					<dd><?php _e('The <abbr title="Uniform Resource Identifier">URI</abbr> of the post', 'post-teaser') ?></dd>

					<dt>%reading_time%</dt>
					<dd><?php _e('An estimation of how long it will take to read', 'post-teaser') ?></dd>

					<dt>%word_image_count%</dt>
					<dd><?php _e('A count of the number of words and images in the post', 'post-teaser') ?></dd>
				</dl>
				</div>

				<div class="left" id="templates">

				<div id="teaser_template_container">
				<p><?php _e('If the post is made into a teaser, I want the message to be in the following format:', 'post-teaser') ?></p>
				<textarea name="teaser_template" id="teaser_template" rows="4" cols="80" class="template"><?php echo htmlspecialchars($this->teaser_template); ?></textarea>
				</div>

				<div id="more_template_container">
				<p><?php _e('If read more link is enabled, I want the message to be in the following format:', 'post-teaser') ?></p>
				<textarea name="more_template" id="more_template" rows="4" cols="80" class="template"><?php echo htmlspecialchars($this->more_template); ?></textarea>
				</div>

				<div id="full_template_container">
				<p><?php _e('If the post is displayed in full, I want the message to be in the following format:', 'post-teaser') ?></p>
				<textarea name="full_template" id="full_template" rows="4" cols="80" class="template"><?php echo htmlspecialchars($this->full_template); ?></textarea>
				</div>
				</div>
				</fieldset>

				<fieldset class="options">
				<h3><?php _e('Tease message control', 'post-teaser') ?></h3>

				<p><label>
				<?php if ($this->more_link == '1'): ?>
					<input type="checkbox" name="more_link" id="more_link" checked="checked" />
				<?php else: ?>
					<input type="checkbox" name="more_link" id="more_link" />
				<?php endif; ?>
				<?php _e("Show read more link at the end of teased post", 'post-teaser') ?> <span class="info"><?php _e("(immediately following post text with no line-breaks)", 'post-teaser') ?></span>
				</label></p>

				<p><label>
				<?php if ($this->block_stats == '1'): ?>
					<input type="checkbox" name="block_stats" id="block_stats" checked="checked" />
				<?php else: ?>
					<input type="checkbox" name="block_stats" id="block_stats" />
				<?php endif; ?>
				<?php _e("Show post statistics as block", 'post-teaser') ?> <span class="info"><?php _e("(original style teaser massage with paragraph break after post text)", 'post-teaser') ?></span>
				</label></p>

				<p class="indent"><label>
				<?php if ($this->block_stats_before == '1'): ?>
					<input type="checkbox" name="block_stats_before" id="block_stats_before" checked="checked" />
				<?php else: ?>
					<input type="checkbox" name="block_stats_before" id="block_stats_before" />
				<?php endif; ?>
				<span id="block_stats_before_label"><?php _e("Show post statistic block before post", 'post-teaser') ?></span> <span id="block_stats_before_info" class="info"><?php _e("(by default post statistic block appears after post)", 'post-teaser') ?></span>
				</label></p>

				<p class="indent"><label>
				<?php if ($this->omit_fullpost == '1'): ?>
					<input type="checkbox" name="omit_fullpost" id="omit_fullpost" checked="checked" />
				<?php else: ?>
					<input type="checkbox" name="omit_fullpost" id="omit_fullpost" />
				<?php endif; ?>
				<span id="omit_fullpost_label"><?php _e("Omit post statistics for fullpost", 'post-teaser') ?></span> <span id="omit_fullpost_info" class="info"><?php _e("(suppress post statistic if fullpost is showned)", 'post-teaser') ?></span>
				</label></p>
				</fieldset>

				<fieldset class="options">
				<h3><?php _e('Advance tease control', 'post-teaser') ?></h3>

				<p><em>
				<?php _e("The filters below follows the precedence (priority) as it is ordered below if there are confilcts in the filters setting") ?>
				<?php echo "<br />" ?>
				<?php _e("(i.e. the first filter overwrites the second and so on)") ?>
				</em></p>

				<p><label>
				<?php if ($this->home_control == '1'): ?>
					<input type="checkbox" name="home_control" id="home_control" checked="checked" />
				<?php else: ?>
					<input type="checkbox" name="home_control" id="home_control" />
				<?php endif; ?>
				<span id="home_control_label"><?php _e("Control tease in homepage", 'post-teaser') ?></span> <span id="home_control_info" class="info"><?php _e("(allows disabling tease or force fullpost on homepage)", 'post-teaser') ?></span>
				</label></p>

				<p class="indent"><label>
				<?php if ($this->home_disable == '1'): ?>
					<input type="radio" name="home_control_opt" value="home_disable" id="home_disable" checked />
				<?php else: ?>
					<input type="radio" name="home_control_opt" value="home_disable" id="home_disable" />
				<?php endif; ?>
				<span id="home_disable_label"><?php _e("Disable tease in homepage", 'post-teaser') ?></span>
				</label></p>

				<p class="indent"><label>
				<?php if ($this->home_showall == '1'): ?>
					<input type="radio" name="home_control_opt" value="home_showall" id="home_showall" checked />
				<?php else: ?>
					<input type="radio" name="home_control_opt" value="home_showall" id="home_showall" />
				<?php endif; ?>
				<span id="home_showall_label"><?php _e("Show fullpost in homepage", 'post-teaser') ?></span>
				</label></p>

				<p><label>
				<?php if ($this->use_disable_filter == '1'): ?>
					<input type="checkbox" name="use_disable_filter" id="use_disable_filter" checked="checked" />
				<?php else: ?>
					<input type="checkbox" name="use_disable_filter" id="use_disable_filter" />
				<?php endif; ?>
				<?php _e("Use filters to disable tease", 'post-teaser') ?> <span class="info"><?php _e("(prevent PostTeaser from processing matched post)", 'post-teaser') ?></span>
				</label></p>

				<p class="indent"><label>
				<?php if ($this->disable_inverse == '1'): ?>
					<input type="checkbox" name="disable_inverse" id="disable_inverse" checked="checked" />
				<?php else: ?>
					<input type="checkbox" name="disable_inverse" id="disable_inverse" />
				<?php endif; ?>
				<span id="disable_inverse_label"><?php _e("Disable tease for categories and/or tags excluded in the list", 'post-teaser') ?></span> <span id="disable_inverse_info" class="info"><?php _e("(If unchecked categories and/or tags in the list is inclusive)", 'post-teaser') ?></span>
				</label></p>

				<p id="disable_cat_label" class="indent"><?php _e('In archive pages of category:', 'post-teaser') ?> <input type="text" id="disable_cat" name="disable_cat" value="<?php echo $this->disable_cat; ?>" /> <span id="disable_cat_info" class="info"><?php _e('(comma separated list in any combination of category name, id, or slug)', 'post-teaser') ?></span></p>

				<p class="indent2"><label>
				<?php if ($this->disable_cat_always == '1'): ?>
					<input type="checkbox" name="disable_cat_always" id="disable_cat_always" checked="checked" />
				<?php else: ?>
					<input type="checkbox" name="disable_cat_always" id="disable_cat_always" />
				<?php endif; ?>
				<span id="disable_cat_always_label"><?php _e("Always apply filter to post even in non-category archive pages", 'post-teaser') ?></span> <span id="disable_cat_always_info" class="info"><?php _e("(e.g. in homepage)", 'post-teaser') ?></span>
				</label></p>

				<p id="disable_tag_label" class="indent"><?php _e('In archive pages of tag:', 'post-teaser') ?> <input type="text" id="disable_tag" name="disable_tag" value="<?php echo $this->disable_tag; ?>" /> <span id="disable_tag_info" class="info"><?php _e('(comma separated list in any combination of tag name, id, or slug)', 'post-teaser') ?></span></p>
				<p class="indent2"><label>
				<?php if ($this->disable_tag_always == '1'): ?>
					<input type="checkbox" name="disable_tag_always" id="disable_tag_always" checked="checked" />
				<?php else: ?>
					<input type="checkbox" name="disable_tag_always" id="disable_tag_always" />
				<?php endif; ?>
				<span id="disable_tag_always_label"><?php _e("Always apply filter to post even in non-tag archive pages", 'post-teaser') ?></span>  <span id="disable_tag_always_info" class="info"><?php _e("(e.g. in homepage)", 'post-teaser') ?></span>
				</label></p>
				</fieldset>

				<p><label>
				<?php if ($this->use_showall_filter == '1'): ?>
					<input type="checkbox" name="use_showall_filter" id="use_showall_filter" checked="checked" />
				<?php else: ?>
					<input type="checkbox" name="use_showall_filter" id="use_showall_filter" />
				<?php endif; ?>
				<?php _e("Use filters to force fullpost", 'post-teaser') ?> <span class="info"><?php _e("(disable tease but process post for statistic)", 'post-teaser') ?></span>
				</label></p>

				<p class="indent"><label>
				<?php if ($this->showall_inverse == '1'): ?>
					<input type="checkbox" name="showall_inverse" id="showall_inverse" checked="checked" />
				<?php else: ?>
					<input type="checkbox" name="showall_inverse" id="showall_inverse" />
				<?php endif; ?>
				<span id="showall_inverse_label"><?php _e("Show fullpost for categories and/or tags excluded in the list", 'post-teaser') ?></span> <span id="showall_inverse_info" class="info"><?php _e("(If unchecked categories and/or tags in the list is inclusive)", 'post-teaser') ?></span>
				</label></p>

				<p id="showall_cat_label" class="indent"><?php _e('In archive pages of category:', 'post-teaser') ?> <input type="text" id="showall_cat" name="showall_cat" value="<?php echo $this->showall_cat; ?>" /> <span id="showall_cat_info" class="info"><?php _e('(comma separated list in any combination of category name, id, or slug)', 'post-teaser') ?></span></p>

				<p class="indent2"><label>
				<?php if ($this->showall_cat_always == '1'): ?>
					<input type="checkbox" name="showall_cat_always" id="showall_cat_always" checked="checked" />
				<?php else: ?>
					<input type="checkbox" name="showall_cat_always" id="showall_cat_always" />
				<?php endif; ?>
				<span id="showall_cat_always_label"><?php _e("Always apply filter to post even in non-category archive pages", 'post-teaser') ?></span> <span id="showall_cat_always_info" class="info"><?php _e("(e.g. in homepage)", 'post-teaser') ?></span>
				</label></p>

				<p id="showall_tag_label" class="indent"><?php _e('In archive pages of tag:', 'post-teaser') ?> <input type="text" id="showall_tag" name="showall_tag" value="<?php echo $this->showall_tag; ?>" /> <span id="showall_tag_info" class="info"><?php _e('(comma separated list in any combination of tag name, id, or slug)', 'post-teaser') ?></span></p>
				<p class="indent2"><label>
				<?php if ($this->showall_tag_always == '1'): ?>
					<input type="checkbox" name="showall_tag_always" id="showall_tag_always" checked="checked" />
				<?php else: ?>
					<input type="checkbox" name="showall_tag_always" id="showall_tag_always" />
				<?php endif; ?>
				<span id="showall_tag_always_label"><?php _e("Always apply filter to post even in non-tag archive pages", 'post-teaser') ?></span> <span id="showall_tag_always_info" class="info"><?php _e("(e.g. in homepage)", 'post-teaser') ?></span>
				</label></p>
				</fieldset>

				<fieldset class="options">
				<h3><?php _e('Fine tuning', 'post-teaser') ?></h3>

				<p><?php _e('Show seconds like this:', 'post-teaser') ?> <span class="example">54 <input type="text" id="word_secs" name="word_secs" value="<?php echo $this->word_secs; ?>" /></span></p>

				<p><?php _e('Show minutes like this:', 'post-teaser') ?>
				<select id="time_separator" name="time_separator" class="example">
					<?php
					$separators = array
						(
							0 => ':',
							1 => '.',
							2 => '-'
						);
					foreach ($separators as $separator) {
						if ($separator == $this->time_separator)
							echo "<option value=\"$separator\" selected=\"selected\">3{$separator}34</option>";
						else
							echo "<option value=\"$separator\">3{$separator}34</option>";
					}
					?>
				</select>
				<input type="text" id="word_mins" name="word_mins" class="example" value="<?php echo $this->word_mins; ?>" />
				</p>

				<p><?php _e('Show word and image counts like this:', 'post-teaser') ?>
				<select name="count_separator" id="count_separator" class="example">
					<?php
					$separators = array
						(
							0 => ', ',
							1 => __(' and ', 'post-teaser'),
							2 => ' &amp; ',
							3 => ' + '
						);
					foreach ($separators as $separator) {
						if ($separator == $this->count_separator)
							echo "<option value=\"$separator\" selected=\"selected\">462 ". __('words', 'post-teaser'). $separator. '3 '. __('images', 'post-teaser'). '</option>';
						else
							echo "<option value=\"$separator\">462 ". __('words', 'post-teaser'). $separator. '3 '. __('images', 'post-teaser'). '</option>';
					}
					?>
				</select></p>

				<p><label>
				<?php if ($this->zero_counts == '1'): ?>
					<input type="checkbox" name="zero_counts" id="zero_counts" checked="checked" />
				<?php else: ?>
					<input type="checkbox" name="zero_counts" id="zero_counts" />
				<?php endif; ?>
				<?php _e("Show the count of images or words, even if it's zero", 'post-teaser') ?>
				</label></p>
				</fieldset>

				<p class="submit">
				<input type="hidden" name="post_teaser_submit" value="1" />
				<input type="submit" value="<?php _e('Reset to defaults', 'post-teaser') ?>" name="submit_reset" id="default-reset" />
				<input type="submit" value="<?php _e('Update Options', 'post-teaser')?> &#187;" name="submit_update" />
				</p>
			</form>
			</div>
			<?php
	}

	/*** Debugging ***/
	var $debug_message;
	function debug($message) {
			if ($this->debug)
					$this->debug_message .= $message . "\n";
	}

	/*** Replaces placeholders with the relevant values ***/
	function placeholders($template) {
		$template = str_replace('%title%', the_title('', '', false), $template);
		$template = str_replace('%plain_title%', strip_tags(str_replace('"', '&quot;', the_title('', '', false))), $template);
		$template = str_replace('%permalink%', get_permalink(), $template);
		$template = str_replace('%word_image_count%', $this->word_image_count, $template);
		$template = str_replace('%reading_time%', $this->reading_time, $template);
		return $template;
	}

	/*** Counts words. PHP's str_word_count() only works for alphabetic characters ***/
	function word_count($text) {
		$text = strip_tags($text);
		$text = preg_split("/\s+/", $text);
		$count = count($text);
		return $count;
	}

	/*** Where all the conditions we don't want to tease are checked here ***/
	function is_disabled() {
		global $post, $cookiehash, $action, $sem_home_page;

		if (is_singular())
			return true;
		elseif (is_feed())
			return true;
		elseif ((!empty($post->post_password)) && ($_COOKIE['wp-postpass_' . $cookiehash] != $post->post_password))
			return true;
		elseif ($action == 'editpost' || $action == 'edit')
			return true;
		elseif ($this->meta == 'disable')
			return true;
		elseif (isset($sem_home_page) && is_home() && function_exists('sem_static_front')) // Semilogic static front page
			return true;
		elseif ($this->home_control && is_home()) { // Must be last in chain of elseif because of nested if
			if ($this->home_disable)
				return true;
			else
				return false; // Skip the rest of the test if it is homepage and showall is selected
		}

		if ($this->use_disable_filter) {
			if ($this->disable_cat &&
				(($this->disable_cat_always == '1' && in_category(array($this->disable_cat))) ||
				 is_category(array($this->disable_cat)) ) ) {
				if ($this->disable_inverse)
					return false;
				else
					return true;
			} elseif ($this->disable_tag &&
					  (($this->disable_tag_always == '1' && has_tag(array($this->disable_tag))) ||
					   is_tag(array($this->disable_tag)) ) ) {
				if ($this->disable_inverse)
					return false;
				else
					return true;
			}
		}
		if ($this->use_disable_filter && $this->disable_inverse)
			return true;

		return false;
	}

	/*** Where all the conditions for showall are checked here ***/
	function is_showall() {
		if ($this->meta == 'showall')
			return true;
		elseif ($this->home_control && $this->home_showall && is_home())
			return true;

		if ($this->use_showall_filter) {
			if ($this->showall_cat &&
				(($this->showall_cat_always == '1' && in_category(array($this->showall_cat))) ||
				 is_category(array($this->showall_cat)) ) )
				if ($this->showall_inverse)
					return false;
				else
					return true;
			elseif ($this->showall_tag &&
					(($this->showall_tag_always == '1' && has_tag(array($this->showall_tag))) ||
					 is_tag(array($this->showall_tag)) ) )
				if ($this->showall_inverse)
					return false;
				else
					return true;
		}
		if ($this->use_showall_filter && $this->showall_inverse)
			return true;

		return false;
	}

	/*** The real business happens here. Every post is run through this method ***/
	function process($content) {
		global $post, $pages, $page, $multipage;

		$matches = null;
		$matches2 = null;
		$auto_close = array();
		$this->debug_message = '';
		$this->meta = get_post_meta($post->ID, 'teaser', true);

		/*** Checks for when we don't want to teaser stuff ***/
		if ($this->is_disabled())
			return $content;

		$this->debug('Starting teaser (got through the checks), version number is ' . $this->version);

		$showall = $this->is_showall();

		/*** Deal with <!--more--> and <!--nextpage--> (this is very hackish) ***/
		$plain_content = $pages[$page-1];
		if (strstr($plain_content, '<!--more-->')) {
			$this->debug('A "more" tag has been detected... it will be replaced with the teaser text.');
			$matches[0] = preg_replace('!<a href="'. preg_quote(get_permalink()) . '#more-' . $post->ID . '".+?>.+?</a>!', '', $content);

			$matches[0] = preg_replace('!<p>\s+</p>!', '', $matches[0]);
			$matches[0] = preg_replace('!<br />\s*</p>!', '</p>', $matches[0]);

			// Get rid of any closing tags at the end of the content as there have
			// been some nesting validation issues (due to WP clashing) and they will be
			// automatically closed in order anyway (see below)
			$matches[0] = preg_replace('!(</([a-zA-Z1-9]+)>\s*)+\s*$!', '', $matches[0]);

			$i = 0;
			$content = $plain_content;
			$more = true;
		}
		if ($multipage) {
			$this->debug('A "nextpage" tag has been detected.');
			if ($more)
				$content_temp = $matches[0];
			else
				$content_temp = $content;
			$content = '';
			foreach ($pages as $item)
				$content .= $item;
		}
		if (($more || $multipage) && ($this->doing_reading_time || $this->doing_counts)) {
			remove_filter('the_content', array(&$this, 'process'), 20);
			$content = apply_filters('the_content', $content);
			add_filter('the_content', array(&$this, 'process'), 20);
			$content = str_replace(']]>', ']]&gt;', $content);
		}

		/*** Reading time ***/
		if ($this->doing_reading_time) {
			$this->debug('Start of reading time calculation');
			$average = $this->word_count($content) / 250 * 60;
			$min = (int) ($average / 60);
			$sec = round(fmod($average, 60));
			if ($sec < 10)
				$sec = '0' . $sec;
			elseif ($sec == 60) { // Fix seconds round to 60 issue
				$min = $min + 1;
				$sec = 0;
			}
			if ($min == 0)
				$this->reading_time = ($min * 60 + $sec) . ' ' . $this->word_secs;
			else
				$this->reading_time = $min . $this->time_separator . $sec . ' ' . $this->word_mins;
			$this->debug("End of reading time calculation. Result = {$this->reading_time}, sec = $sec, min = $min");
		}

		/*** Word/image count ***/
		if ($this->doing_counts) {
			$this->debug('Start of word/image count calculation');
			$word_count = $this->word_count($content);
			if (!$this->zero_counts && $word_count == 0)
				$word_count = '';
			else
				$word_count .= ($word_count == 1) ? __(' word', 'post-teaser') : __(' words', 'post-teaser');

			$temp = preg_replace('/<img[^>]*class=\'wp-smiley\'[^>]*>/i', '', $content);
			$image_count = preg_match_all('/<img[^>]*>/i', $temp, $matches2);
			if (!$this->zero_counts && $image_count == 0)
				$image_count = "";
			else
				$image_count .= ($image_count == 1) ? __(' image', 'post-teaser') : __(' images', 'post-teaser');

			$this->word_image_count = $word_count;
			if ($word_count && $image_count)
				$this->word_image_count .= $this->count_separator;
			$this->word_image_count .= $image_count;
			$this->debug("End of word/image count calculation. Result = {$this->word_image_count}, words = $word_count, images = $image_count");
		}

		if ($multipage)
			$content = $content_temp;

		/***
		This is how it works:
			* Split posts into "blocks"
			* Find the first block which would produce a cumulative word count greater than the target
			* Decrement this value if the block before it is closer to the target
			* Decide whether to make a "teaser" of the post based on whether that chosen block is the last one.
				Exceptions:
					* If it has a <!--more--> tag, it's teasered regardless
					* If the post has a "teaser" custom field with a value of "showall", it will be returned in full regardless (and <!--more--> is over-ridden)
			* If the post is teasered:
				* Put all (X)HTML starting tags into an array
				* From this array, get the actual element names, and exclude self-closing tags (like <br />). What's left goes into $auto_close
				* Unset each element as a closing tag is found for it
				* The elements left over must have been chopped in half -- give them a closing tag
		***/
		if (!$more && !$showall) {
			preg_match_all("!.*?<({$this->blocks})[^>]*>.+?</\\1>!si", $content, $matches);
			$matches = $matches[0];
			$block_count = count($matches);
			$this->debug("Number of blocks: $block_count");

			$current_word_count = 0;
			$block_word_count = array();
			for ($i = 0; $current_word_count < $this->target && $i < $block_count; /* (increment is conditional, see below) */) {
				$block_word_count[$i] = $this->word_count($matches[$i]);
				$current_word_count += $block_word_count[$i];
				if ($current_word_count < $this->target)
					$i++;
			}
			$this->debug("Finished looping through on block #$i (starts at zero). Cumulative word count was $current_word_count. Target was {$this->target}.");

			if ($current_word_count >= $this->target && $i > 0) { // No need if it will definitely not be teasered
				$this_block_distance = $current_word_count - $this->target;
				$last_block_distance = $this->target - ($current_word_count - $block_word_count[$i]);
				$this->debug("Current block is $this_block_distance words from target, previous block is $last_block_distance words from target.");
				if ($this_block_distance > $last_block_distance) {
					$i--;
					$this->debug("Decremented to $i");
				}
			}
		}

		if (($i + 1 < $block_count || $more) && !$showall) {
			$this->debug('Post will be teasered');
			$fullpost = false;

			for ($j = 0; $j <= $i; $j++) {
				preg_match_all('!<(?:[a-zA-Z1-9]+)[^>]*>!i', $matches[$j], $matches2);
				$matches2 = $matches2[0];
				foreach ($matches2 as $id => $element) {
					if (preg_match('!^<([a-zA-Z1-9]+)[^>]*/>$!i', $element)) {
						unset($matches2[$id]);
						continue;
					}
					$element = preg_replace('!^<([a-zA-Z1-9]+)[^>]*>$!i', "$1", $element);
					$auto_close[] = $element;
				}
			}

			$content = '';
			for ($j = 0; $j <= $i; $j++) {
				$temp = $matches[$j];

				foreach ($auto_close as $id => $element) {
					$pos = strpos(" " . $temp, "</$element>"); // Space at front because 0 == false
					if ($pos) {
						$temp = substr_replace($temp, '', $pos, strlen("</$element>")); // Makes sure a closing tag is not counted more than once
						unset($auto_close[$id]);
					}
				}
				if (!$this->debug)
					$content .= $matches[$j];
				else
					$content .= "\n<!--[start $j, count: " . $block_word_count[$j] . "]-->\n" . $matches[$j] . "\n<!--[end $j]-->\n";
			}
			$auto_close = array_reverse($auto_close);
			foreach ($auto_close as $element)
				$content .= "</$element>";

			if ($this->more_link) {
				$lastp = strrpos($content, "</p>");

				if ($lastp) {
					$more_template =& $this->more_template;
					$teaser_str = " <span class=\"post-teaser-more\">" . $this->placeholders($more_template) . '</span>';
					$content = substr_replace($content, $teaser_str, $lastp, 0);
				}
			}

			$template =& $this->teaser_template;
		} else {
			$this->debug('Post is being returned in full');
			$fullpost = true;

			$template =& $this->full_template;
		}

		if ($this->block_stats && !($this->omit_fullpost && $fullpost)) {
			if ($this->block_stats_before)
				$content = "\n\n<div class=\"post-teaser-block\">" . $this->placeholders($template) . '</div>' . $content;
			else
				$content .= "\n\n<div class=\"post-teaser-block\">" . $this->placeholders($template) . '</div>';
		}

		$this->debug('The End.');
		if ($this->debug)
			$content .= "\n\n<!-- \n" . $this->debug_message . "-->\n\n";
		return $content;
	}

	/*** A fix for invalid code from wpautop() (http://trac.wordpress.org/ticket/1099). ***/
	/* Disabled because the bug above have been fixed. Will consider removal at a later date
	function autopfix($pee) {
		$pee = preg_replace('!(<(?:div|address|form)[^>]*>)([^<]+)</p>!', "$1<p>$2</p>", $pee);
		$pee = preg_replace('!<p>([^<]+)\s*?(</(?:div|address|form)[^>]*>)!', "<p>$1</p>$2", $pee);
		return $pee;
	}
	*/

	function replace_excerpt($excerpt) {
		return the_content();
	}
}
$post_teaser = new post_teaser();
//add_filter('the_content', array(&$post_teaser, 'autopfix')); // Disabled because the associated bug have been fixed
add_filter('the_content', array(&$post_teaser, 'process'), 20);
add_filter('the_excerpt', array(&$post_teaser, 'replace_excerpt'), 20); // Because Post Teaser does the same thing, better
//add_action('admin_menu', array(&$post_teaser, 'init_option_page'));
?>